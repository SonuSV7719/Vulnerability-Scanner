import streamlit as st
import re


def scan_file(file_contents):
    vulnerabilities = []

    #sql injection
    if re.search(r"SELECT \* FROM", file_contents, re.IGNORECASE):
        vulnerabilities.append("SQL Injection Vulnerability")

    # cmd injection
    if re.search(r"\s*(?:rm|ls|cat|id)\s", file_contents, re.IGNORECASE):
        vulnerabilities.append("Command Injection Vulnerability")

    # path tranversal
    if re.search(r"\.\./", file_contents):
        vulnerabilities.append("Path Traversal Vulnerability")

    # remote file inclusion
    if re.search(r"include\s*[\"'](http|https):", file_contents, re.IGNORECASE):
        vulnerabilities.append("Remote File Inclusion Vulnerability")

    return vulnerabilities


def main():
    st.set_page_config(page_title='Vulnerability Scanner', page_icon='ðŸ˜”')
    st.title("Vulnerability Scanner")

    file = st.file_uploader("Upload a file", type=["html", "php", "js", 'py'], key="file_upload")
    if file:
        file_contents = file.read().decode("utf-8")
        vulnerabilities = scan_file(file_contents)

        if vulnerabilities:
            i = 1
            st.subheader("Vulnerabilities Found")
            for vulnerability in vulnerabilities:
                st.write(i, vulnerability)
                i+=1
        else:
            st.subheader("No Vulnerabilities Found")


if __name__ == "__main__":
    main()
